{"version":3,"sources":["component/Blogging/Add/Edit.js"],"names":["Edit","inputRef","useRef","titleRef","contentRef","useAuth","currentUser","updateProfile","useState","error","setError","file","setFile","docs","useFirestore","uid","history","useHistory","count","countId","setCountId","selectedImg","setSelectedImg","selectedId","setSelectedId","selectedDescription","setSelectedDescription","savedDescription","setSavedDescription","deletedImage","setDeletedImage","saveDrafts","setSaveDrafts","id","useParams","console","log","draftData","setDraftData","datas","GetData","date","Date","month","getMonth","day","String","getDate","padStart","year","getFullYear","output","noSave","instance","request","method","url","then","response","catch","err","push","handleClick","e","target","classList","contains","options","className","onClick","titleValue","titlePlaceholder","current","value","contentValue","contentPlaceholder","length","countData","contentObjectKey","contentKey","content","Object","keys","setTitlePlaceholder","title","setContentPlaceholder","post","put","deleteDraft","setDeleteDrafts","imageData","setImageData","grabDraftData","a","get","res","data","images","useEffect","window","scrollTo","type","ref","onChange","event","selected","files","countArrayNumber","includes","name","setId","imageDraft","deletedImageUrl","rows","cols","preventDefault","img"],"mappings":"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","file":"static/js/7.f708bd85.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport './Add.css'\r\nimport { useAuth } from '../../Authentication/AuthContext/AuthContext';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ProgressBar from '../../ProgressBar/ProgressBar';\r\nimport useFirestore from '../../../hooks/useFirestore';\r\nimport instance from '../../../axios-orders';\r\nimport GetData from './GetData/GetData';\r\nimport ShowCurrentImages from './ShowCurrentImages/ShowCurrentImages';\r\nimport ModalDescription from './ModalDescription/ModalDescription';\r\n\r\n\r\n\r\n\r\nexport default function Edit() {\r\n    const inputRef = useRef();\r\n    const titleRef = useRef();\r\n    const contentRef = useRef();\r\n    const { currentUser, updateProfile } = useAuth();\r\n    const [error, setError] = useState('');\r\n    // const [loading, setLoading] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const { docs } = useFirestore(currentUser.uid);\r\n    const history = useHistory();\r\n\r\n\r\n    // const [info, setInfo] = useState([]);\r\n    const [count, setCount] = useState([]);\r\n    const [countId, setCountId] = useState('');\r\n    const [selectedImg, setSelectedImg] = useState(null);\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const [selectedDescription, setSelectedDescription] = useState(null);\r\n    const [savedDescription, setSavedDescription] = useState(null);\r\n    const [deletedImage, setDeletedImage] = useState(null);\r\n    const [saveDrafts, setSaveDrafts] = useState(false);\r\n    const { id } = useParams();\r\n    console.log(id);\r\n    const [draftData, setDraftData] = useState([]);\r\n\r\n\r\n\r\n    // TODO: Grab images from /userId/draft data instead\r\n    // Grabs images from /userId/images database\r\n    const { datas } = GetData(docs, id, savedDescription, deletedImage);\r\n\r\n    console.log(datas);\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const types = ['image/png', 'image/jpeg'];\r\n        let selected = e.target.files[0];\r\n        let countArrayNumber = 0\r\n\r\n        if (count.length > 1) {\r\n            countArrayNumber = count.length - 1;\r\n        }\r\n        console.log(countArrayNumber);\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setCountId(id);\r\n            setError('');\r\n\r\n        } else {\r\n            setFile(null);\r\n            setCountId('');\r\n            setError('Please select an image file (png or jpeg)');\r\n        }\r\n    }\r\n\r\n\r\n    // console.log(images);\r\n\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    const date = new Date()\r\n    const month = monthNames[date.getMonth()];\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    const output = `${month} ${day}/${year}`;\r\n\r\n\r\n    console.log(count.id);\r\n\r\n\r\n    const saveDraft = () => {\r\n        let titleValue = ''\r\n        if (titlePlaceholder || titleRef.current.value !== titleValue) {\r\n            if (titlePlaceholder !== titleRef.current.value) {\r\n                titleValue = titleRef.current.value;\r\n            }\r\n            if (titlePlaceholder === titleRef.current.value) {\r\n                titleValue = titlePlaceholder;\r\n            }\r\n        }\r\n\r\n        let contentValue = contentPlaceholder\r\n        if (contentRef.current.value !== contentValue) {\r\n            // if (contentRef.current.value === '') {\r\n            //     contentValue = contentPlaceholder;\r\n            // }\r\n            contentValue = contentRef.current.value;\r\n\r\n        }\r\n\r\n        let res = []\r\n        if (datas.length > 0 && countData) {\r\n            countData.push(count.id);\r\n            res = countData;\r\n        }\r\n        if (datas.length > 0 && !countData) {\r\n            res = [count.id]\r\n        }\r\n        if (datas.length == 0 && countData) {\r\n            res = countData;\r\n        }\r\n\r\n\r\n        let contentObjectKey = '';\r\n        let contentKey = '';\r\n        console.log(contentObjectKey);\r\n        console.log(contentKey)\r\n        if (draftData.length > 0) {\r\n            contentObjectKey = draftData[0].content;\r\n            contentKey = Object.keys(contentObjectKey);\r\n            setTitlePlaceholder(contentObjectKey[contentKey].title);\r\n            setContentPlaceholder(contentObjectKey[contentKey].content)\r\n        }\r\n\r\n        console.log(contentValue);\r\n\r\n        let post = {\r\n            title: titleValue,\r\n            content: contentValue,\r\n            // images: datas\r\n        }\r\n\r\n\r\n        instance.put(`users/${currentUser.uid}/drafts/${id}/content/${contentKey}.json`, post)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        // Delete Count\r\n        instance.request({\r\n            method: 'delete',\r\n            url: `users/${currentUser.uid}/count/${count.id}.json`\r\n        }).then(response => {\r\n            console.log(response);\r\n            console.log(`${count.id} count file is deleted`);\r\n\r\n        })\r\n            .catch(err => console.log(err));\r\n\r\n        console.log('saved to drafts');\r\n        history.push('/profile-blogs');\r\n    }\r\n\r\n    const noSave = () => {\r\n        // Deletes draft\r\n        instance.request({\r\n            method: 'delete',\r\n            url: `users/${currentUser.uid}/drafts/${id}.json`\r\n        }).then(response => {\r\n            console.log(response);\r\n            console.log(`draft ${id} deleted`)\r\n\r\n        })\r\n            .catch(err => console.log(err));\r\n\r\n        // // Delete Count\r\n        instance.request({\r\n            method: 'delete',\r\n            url: `users/${currentUser.uid}/count/${count.id}.json`\r\n            // data: data\r\n        }).then(response => {\r\n            console.log(response);\r\n            console.log(`${count.id} count file is deleted`);\r\n\r\n        })\r\n            .catch(err => console.log(err));\r\n        history.push('/profile-blogs');\r\n    }\r\n\r\n\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSaveDrafts(false);\r\n        }\r\n    }\r\n\r\n    let options = [];\r\n    if (saveDrafts === true) {\r\n        options = (\r\n            <div className='container' >\r\n                <div className='backdrop' onClick={handleClick}>\r\n                    <div className='options'>\r\n                        <h2>Save to Drafts?</h2>\r\n                        <div className='actions'>\r\n                            <button onClick={saveDraft}>Yes</button>\r\n                            <button onClick={noSave}>No</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const requestToDraft = () => {\r\n        setSaveDrafts(true);\r\n    }\r\n\r\n    const [deleteDraft, setDeleteDrafts] = useState(false);\r\n\r\n    const requestToDelete = () => {\r\n        setDeleteDrafts(true);\r\n    }\r\n\r\n    const dontDelete = () => {\r\n        setDeleteDrafts(false);\r\n    }\r\n\r\n    if (deleteDraft === true) {\r\n        options = (\r\n            <div className='container' >\r\n                <div className='backdrop' onClick={handleClick}>\r\n                    <div className='options'>\r\n                        <h2>Delete Draft?</h2>\r\n                        <div className='actions'>\r\n                            <button onClick={noSave}>Yes</button>\r\n                            <button onClick={dontDelete}>No</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    const grabCountData = async () => {\r\n        console.log(count);\r\n        await instance.get(`users/${currentUser.uid}/count.json`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                console.log(response.data.length)\r\n                let res = []\r\n                for (let key in response.data) {\r\n                    res.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                console.log(res.length);\r\n                let arrayNum = 0;\r\n\r\n                if (res.length > 1) {\r\n                    arrayNum = res.length - 1;\r\n                }\r\n                setCount(res[arrayNum]);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const [titlePlaceholder, setTitlePlaceholder] = useState('');\r\n    const [contentPlaceholder, setContentPlaceholder] = useState('');\r\n    const [imageData, setImageData] = useState([])\r\n    const [countData, setCountData] = useState([]);\r\n    console.log(contentPlaceholder);\r\n\r\n\r\n    const grabDraftData = async () => {\r\n        await instance.get(`users/${currentUser.uid}/drafts/${id}.json`)\r\n            .then(response => {\r\n                console.log(response)\r\n                let res = []\r\n                res.push({\r\n                    content: response.data.content,\r\n                    // title: response.data.content,\r\n                    images: response.data.images\r\n                })\r\n                setDraftData(res)\r\n                setImageData(response.data.images)\r\n                let contentObjectKey = '';\r\n                let contentKey = '';\r\n                if (res.length > 0) {\r\n                    contentObjectKey = res[0].content;\r\n                    contentKey = Object.keys(contentObjectKey);\r\n                    setTitlePlaceholder(contentObjectKey[contentKey].title);\r\n                    setContentPlaceholder(contentObjectKey[contentKey].content)\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n    }\r\n    console.log(imageData);\r\n    console.log(titlePlaceholder)\r\n\r\n    let draftImages = [];\r\n\r\n\r\n    const postBlog = (event) => {\r\n        event.preventDefault();\r\n\r\n        const post = {\r\n            date: output,\r\n            title: titleRef.current.value,\r\n            content: contentRef.current.value,\r\n        }\r\n\r\n        instance.post(`users/${currentUser.uid}/blogs/${id}/content.json`, post)\r\n            .then(response => {\r\n                console.log(response)\r\n                // console.log(response.data)\r\n            })\r\n            .catch(error => console.log(error));\r\n\r\n        for (let img of datas) {\r\n            console.log(img);\r\n            instance.post(`users/${currentUser.uid}/blogs/${id}/images.json`, img)\r\n                .then(response => {\r\n                    console.log(response)\r\n                    // console.log(response.data)\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n\r\n        instance.request({\r\n            method: 'delete',\r\n            url: `users/${currentUser.uid}/drafts/${id}.json`\r\n        }).then(response => {\r\n            console.log(response);\r\n            console.log(`draft ${id} deleted`)\r\n\r\n        })\r\n            .catch(err => console.log(err));\r\n\r\n\r\n        history.push('/profile-blogs');\r\n    }\r\n\r\n    useEffect(async (deletedImage) => {\r\n        window.scrollTo(0, 0)\r\n        // grabCountData();\r\n        grabDraftData();\r\n\r\n\r\n\r\n    }, [deletedImage])\r\n\r\n    console.log(titlePlaceholder);\r\n\r\n    const submitPostHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log('post submitted')\r\n        // history.push('/profile-blogs');\r\n    }\r\n    console.log(datas);\r\n\r\n\r\n    // Delete Image URL\r\n\r\n    let deleteUrl = '';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='container-add'>\r\n            <div className='title'>\r\n                <h1>Edit Draft #{id}</h1>\r\n                <div className='choices'>\r\n                    <button onClick={requestToDraft}>Back</button>\r\n                    <button className='delete' onClick={requestToDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n            <form className='newBlog'>\r\n                <div className='newBlog-input'>\r\n                    <label>Title </label>\r\n                    <input type='text' ref={titleRef} value={titlePlaceholder} onChange={event => setTitlePlaceholder(event.target.value)} />\r\n                    {/* autoFocus: focuses on the input as soon as user arrives on page */}\r\n                </div>\r\n                <div className='newBlog-input'>\r\n                    <label>Images </label>\r\n                    <div className='inputFile'>\r\n                        <input type='file' onChange={handleChange} ref={inputRef} />\r\n                        <span><i className=\"fas fa-plus\"></i></span>\r\n                    </div>\r\n                    <h4>Click on any image to edit and add a description</h4>\r\n                    <div className='output'>\r\n                        {error && <div className='errors'>{error}</div>}\r\n                        {file && file.name}\r\n                        {file && <ProgressBar file={file} setFile={setFile} id={countId} setId={setCountId} />}\r\n                    </div>\r\n                </div>\r\n\r\n                <ShowCurrentImages data={datas} setSelectedImg={setSelectedImg} setSelectedId={setSelectedId} setSelectedDescription={setSelectedDescription} imageDraft={imageData}\r\n                />\r\n                {selectedImg &&\r\n                    <ModalDescription\r\n                        selectedImg={selectedImg} setSelectedImg={setSelectedImg}\r\n                        selectedId={selectedId}\r\n                        setSelectedId={setSelectedId}\r\n                        selectedDescription={selectedDescription} setSelectedDescription={setSelectedDescription}\r\n                        count={id}\r\n                        savedDescription={setSavedDescription}\r\n                        deletedImage={setDeletedImage}\r\n                        deletedImageUrl={deleteUrl}\r\n                    />}\r\n                {/* <h4>Add a description to any images by clicking on the image</h4> */}\r\n                <div className='newBlog-input'>\r\n                    <label>Content </label>\r\n                    <textarea rows='20' cols='100' value={contentPlaceholder} ref={contentRef} onChange={event => setContentPlaceholder(event.target.value)}></textarea>\r\n                </div>\r\n                <div className='newBlog-post'>\r\n                    <button\r\n                        // disabled={loading}\r\n                        type='submit'\r\n                        onClick={postBlog}\r\n                    >Post\r\n                </button>\r\n                </div>\r\n            </form>\r\n            {options}\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}